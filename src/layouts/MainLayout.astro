---
import { ViewTransitions } from 'astro:transitions'
import { getImage } from 'astro:assets'

import MetaTags from '../components/MetaTags.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'

import '../css/palette.css'
import '../css/styles.css'

const { id, title = 'lorenzogrv.tech', bg } = Astro.props

const backImg = await getImage({
  src: bg,
  width: 1600,
  loading: 'lazy',
  densities: [1, 2, 3]
})
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/img/Yin_yang.svg" />
    <meta name="viewport" content="width=device-width, initial-scale:1.0" />

    <title>{title}</title>
    <MetaTags />

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;600&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inconsolata:wght@400;600&display=swap" rel="stylesheet">

    <ViewTransitions />
  </head>
  <body class={id}>
    <Header navigation:persist />

    <main transition:animate="fade">
      <slot />
    </main>

    <Footer navigation:persist />
  </body>
</html>
<style is:global>
  html, body { margin: 0; }

  body {
    min-height: 101vh; /* force scrollbar to appear */
    display: flex;
    flex-flow: column;
  }

  header {
    z-index: 1;
  }

  main {
    flex-grow: 1;
    box-sizing: border-box;
    width: 90vw;
    max-width: 40em;
    margin: 1em auto;
    padding: 1em 1.2em;
    padding-bottom: 3em;
    background-color: var(--main-bg-overlay);
    backdrop-filter: blur(7px);
    border-radius: .5rem;
    display: flex;
    flex-flow: column wrap;
    flex-basis: 100%;
    justify-content: center;
    align-items: center;
  }
  footer {
    padding-top: .7em;
    padding-bottom: 1em;
    bottom: 0;
    text-align: center;
  }
</style>
<style
  define:vars={{
    // 'bg-image': `${backImg.src}`,
    'bg-image-sm': `url(${backImg.srcSet.values[0].url})`,
    'bg-image-md': `url(${backImg.srcSet.values[1].url})`,
    'bg-image-lg': `url(${backImg.srcSet.values[2].url})`
  }}
>
/**
 * Backgrounds
 */
body {
  background-size: cover;
  background-position: top center;
  background-attachment: fixed;
  background-image: var(--bg-image-sm, "");

  /* Chrome/Edge/Opera/Samsung, Safari will fallback to this as well */
  background-image: -webkit-image-set(
    var(--bg-image-sm) 1x,
    var(--bg-image-md) 2x,
    var(--bg-image-lg) 3x
  );
  /* Standard use */
  background-image: image-set(
    var(--bg-image-sm) 1x,
    var(--bg-image-md) 2x,
    var(--bg-image-lg) 3x
  );
}
</style>
