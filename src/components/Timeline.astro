---
type Event = {
  title: string;
  start: Date;
  end: Date;
}

interface Props {
  events: Event[]
  format: (start: Date, end: Date) => string
}

const {
  events,
  format = (start: Date, end: Date) => {
    const [m, y] = [
      { month: 'short' }, { year: 'numeric' }
    ].map((opts: {}) => new Intl.DateTimeFormat('en', opts))
    return [start, end]
      .map(date => `${m.format(date)}/${y.format(date)}`)
      .join('-')
  }
}: Props = Astro.props
---
<ul>
  {events.map(event => (
    <li>{format(event.start, event.end)} - {event.title}</li>
  ))}
</ul>
{/*
 Parto de una base simplista, lo importante ahora es sacarlo. Ya se mejorará
 → https://css-tricks.com/snippets/css/unordered-list-as-a-timeline/
*/}
<style>
ul {
  list-style-type: none;
}

li {
  position: relative;
  margin: 0;
  padding-bottom: 1em;
  padding-left: 20px;
}

li:before {
  content: '';
  background-color: #c00;
  position: absolute;
  bottom: 0px;
  top: 0px;
  left: 6px;
  width: 3px;
}

li:after {
  content: '';
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' aria-hidden='true' viewBox='0 0 32 32' focusable='false'%3E%3Ccircle stroke='none' fill='%23c00' cx='16' cy='16' r='10'%3E%3C/circle%3E%3C/svg%3E");
  position: absolute;
  left: 0;
  top: 2px;
  height: 12px;
  width: 12px;
}
</style>
